{"ast":null,"code":"var _jsxFileName = \"/mnt/d/500_Projects/100_Learning/005_CyberSoft/20231107_BC55_React/bai-tap-3/src/Components/ShoesStore/ShoesStore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProductList from \"./Product/ProductList\";\nimport ProductDetail from \"./Product/ProductDetail\";\nimport AddToCart from \"./Product/AddToCart\";\nimport Modal from \"../Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoesStore() {\n  _s();\n  const [modalContent, setModalContent] = useState(null);\n  const [modalSettings, setModalSettings] = useState({});\n  // const [ selectedQuantity, setSelectedQuantity ] =  useState( 0 );\n  const [myCart, setMyCart] = useState(JSON.parse(localStorage.getItem(\"myCart\")) || []);\n  const handleShowModal = (contentType, focusItem) => {\n    var _myCart$find;\n    if (!focusItem) return null;\n    const currentQuantity = (_myCart$find = myCart.find(e => e.id = focusItem.id)) === null || _myCart$find === void 0 ? void 0 : _myCart$find.quantity;\n    switch (contentType) {\n      case \"AddToCart\":\n        let {\n          modalSettings: modalAddToCartSettings,\n          content: modalAddToCartContent\n        } = AddToCart({\n          currentQuantity,\n          item: focusItem,\n          action: {\n            handleUpdateProductInMyCart\n          }\n        });\n        setModalSettings(modalAddToCartSettings);\n        setModalContent(modalAddToCartContent);\n        break;\n      case \"ProductDetail\":\n        let {\n          modalSettings: modalProductDetailSettings,\n          content: modalProductDetailContent\n        } = ProductDetail({\n          item: focusItem,\n          action: {\n            handleUpdateProductInMyCart\n          }\n        });\n        setModalContent(modalProductDetailContent);\n        setModalSettings(modalProductDetailSettings);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleCloseModal = () => {\n    setModalContent(null);\n    setModalSettings({});\n  };\n  const handleUpdateProductInMyCart = (item, quantity) => {\n    const {\n      id\n    } = item;\n    const cart = [...myCart];\n    let itemCartIndex = cart.findIndex(element => element.id === id);\n    let target = {\n      id,\n      quantity\n    };\n    switch (true) {\n      case itemCartIndex > -1 && quantity > 0:\n        cart[itemCartIndex] = target;\n        break;\n      case itemCartIndex > -1 && quantity <= 0:\n        cart.splice(itemCartIndex, 1);\n        break;\n      case itemCartIndex <= -1 && quantity > 0:\n        cart.push(target);\n        break;\n      default:\n        break;\n    }\n    setMyCart(cart);\n    handleCloseModal();\n  };\n  useEffect(() => {\n    localStorage.setItem(\"myCart\", JSON.stringify(myCart));\n  }, [myCart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shoesStore\",\n    children: [/*#__PURE__*/_jsxDEV(ProductList, {\n      action: {\n        handleShowModal,\n        handleUpdateProductInMyCart\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      props: {\n        modalSettings,\n        modalContent\n      },\n      action: {\n        handleCloseModal\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(ShoesStore, \"kCfjObOoJbxqoNwOmr2aoY4Ui6o=\");\n_c = ShoesStore;\nexport default ShoesStore;\nvar _c;\n$RefreshReg$(_c, \"ShoesStore\");","map":{"version":3,"names":["React","useEffect","useState","ProductList","ProductDetail","AddToCart","Modal","jsxDEV","_jsxDEV","ShoesStore","_s","modalContent","setModalContent","modalSettings","setModalSettings","myCart","setMyCart","JSON","parse","localStorage","getItem","handleShowModal","contentType","focusItem","_myCart$find","currentQuantity","find","e","id","quantity","modalAddToCartSettings","content","modalAddToCartContent","item","action","handleUpdateProductInMyCart","modalProductDetailSettings","modalProductDetailContent","handleCloseModal","cart","itemCartIndex","findIndex","element","target","splice","push","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","props","_c","$RefreshReg$"],"sources":["/mnt/d/500_Projects/100_Learning/005_CyberSoft/20231107_BC55_React/bai-tap-3/src/Components/ShoesStore/ShoesStore.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport ProductList from \"./Product/ProductList\";\r\nimport ProductDetail from \"./Product/ProductDetail\";\r\nimport AddToCart from \"./Product/AddToCart\";\r\nimport Modal from \"../Modal\";\r\n\r\nfunction ShoesStore() {\r\n    const [ modalContent, setModalContent ] =  useState( null );\r\n    const [ modalSettings, setModalSettings ] =  useState( {} );\r\n    // const [ selectedQuantity, setSelectedQuantity ] =  useState( 0 );\r\n    const [ myCart, setMyCart ] = useState(JSON.parse(localStorage.getItem(\"myCart\")) || []);\r\n\r\n\r\n\r\n    const handleShowModal = ( contentType, focusItem ) => {\r\n        if (!focusItem) return null;\r\n        const currentQuantity = myCart.find(e => e.id = focusItem.id )?.quantity;\r\n        switch (contentType) {\r\n            case \"AddToCart\" :\r\n                let { modalSettings: modalAddToCartSettings, content: modalAddToCartContent } =\r\n                    AddToCart({currentQuantity, item: focusItem, action: {handleUpdateProductInMyCart}})\r\n                setModalSettings(modalAddToCartSettings);\r\n                setModalContent(modalAddToCartContent);\r\n                break;\r\n            case \"ProductDetail\" :\r\n                let { modalSettings: modalProductDetailSettings, content: modalProductDetailContent } =\r\n                    ProductDetail({item: focusItem, action: {handleUpdateProductInMyCart}})\r\n                setModalContent(modalProductDetailContent);\r\n                setModalSettings(modalProductDetailSettings);\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setModalContent(null);\r\n        setModalSettings({});\r\n    }\r\n\r\n    const handleUpdateProductInMyCart = (item, quantity) => {\r\n        const { id } = item;\r\n        const cart = [...myCart];\r\n        let itemCartIndex = cart.findIndex((element) => element.id === id);\r\n        let target = {\r\n            id,\r\n            quantity\r\n        }\r\n\r\n        switch (true) {\r\n            case itemCartIndex > -1 && quantity > 0: cart[itemCartIndex] = target; break;\r\n            case itemCartIndex > -1 && quantity <= 0 : cart.splice(itemCartIndex, 1); break;\r\n            case itemCartIndex <= -1 && quantity > 0 : cart.push(target); break;\r\n            default: break;\r\n        }\r\n\r\n        setMyCart(cart);\r\n        handleCloseModal();\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"myCart\", JSON.stringify(myCart));\r\n    }, [myCart])\r\n\r\n    return (\r\n        <div className=\"shoesStore\">\r\n            <ProductList action={{ handleShowModal, handleUpdateProductInMyCart }}/>\r\n            <Modal props={{ modalSettings, modalContent }} action={{ handleCloseModal }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShoesStore;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}